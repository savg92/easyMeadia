{"ast":null,"code":"var _class;\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class SingInFormComponent {\n  constructor() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n    this.email = '';\n    this.password = '';\n    this.input = 'password';\n    this.showPassword = false;\n  }\n  login2() {\n    alert(this.loginForm.value.email + ' | ' + this.loginForm.value.password);\n  }\n  toggleShow() {\n    this.showPassword = !this.showPassword;\n    this.input = this.showPassword ? 'text' : 'password';\n  }\n}\n_class = SingInFormComponent;\n_class.ɵfac = function SingInFormComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-sing-in-form\"]],\n  decls: 13,\n  vars: 3,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"flex\", \"flex-col\"], [\"for\", \"email\", 1, \"label-form\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"example@email.com\", 1, \"input-group\"], [\"for\", \"password\", 1, \"label-form\"], [1, \"input-group\"], [\"formControlName\", \"password\", \"placeholder\", \"\\u00B7\\u00B7\\u00B7\\u00B7\\u00B7\\u00B7\", \"id\", \"password\", 2, \"font-size\", \"large\", 3, \"type\"], [\"type\", \"button\", 1, \"btn-show\", 3, \"click\"], [\"type\", \"submit\", \"value\", \"SIGN IN\", 1, \"submit-login\", 3, \"disabled\"]],\n  template: function SingInFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function SingInFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.login2();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 5);\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementStart(10, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function SingInFormComponent_Template_button_click_10_listener() {\n        return ctx.toggleShow();\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"div\");\n      i0.ɵɵelement(12, \"input\", 8);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵpropertyInterpolate(\"type\", ctx.input);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 920:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nexpected \\\\\\\"{\\\\\\\".\\\\n  \\u2577\\\\n2 \\u2502     ma\\\\n  \\u2502       ^\\\\n  \\u2575\\\\n  src/app/sing-in-form/sing-in-form.component.scss 2:7  root stylesheet\\\");\\n\\n\\n })\\n\\n\\n \\t});\\n\\n\\n\\n \\t\\n\\n \\t// startup\\n\\n \\t// Load entry module and return exports\\n\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n\\n \\tvar __webpack_exports__ = {};\\n\\n \\t__webpack_modules__[920]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","SingInFormComponent","constructor","loginForm","email","required","password","input","showPassword","login2","alert","value","toggleShow","selectors","decls","vars","consts","template","SingInFormComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","SingInFormComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","SingInFormComponent_Template_button_click_10_listener","ɵɵproperty","ɵɵadvance","ɵɵpropertyInterpolate","valid"],"sources":["/Users/santiago.valenzuela/Desktop/Easy Media/frontend/src/app/sing-in-form/sing-in-form.component.ts","/Users/santiago.valenzuela/Desktop/Easy Media/frontend/src/app/sing-in-form/sing-in-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n\tselector: 'app-sing-in-form',\n\ttemplateUrl: './sing-in-form.component.html',\n\tstyleUrls: ['./sing-in-form.component.scss'],\n})\nexport class SingInFormComponent {\n\tloginForm = new FormGroup({\n\t\temail: new FormControl('', Validators.required),\n\t\tpassword: new FormControl('', Validators.required),\n\t});\n\n\temail: string = '';\n\n\tpassword: string = '';\n\n\tinput = 'password';\n\n\tlogin2() {\n\t\talert(this.loginForm.value.email + ' | ' + this.loginForm.value.password);\n\t}\n\n\tshowPassword = false;\n\n\ttoggleShow() {\n\t\tthis.showPassword = !this.showPassword;\n\t\tthis.input = this.showPassword ? 'text' : 'password';\n\t}\n}\n","<form\n\t[formGroup]=\"loginForm\"\n\t(ngSubmit)=\"login2()\"\n>\n\t<div class=\"flex flex-col\">\n\t\t<label\n\t\t\tfor=\"email\"\n\t\t\tclass=\"label-form\"\n\t\t\t>Email</label\n\t\t>\n\t\t<input\n\t\t\ttype=\"email\"\n\t\t\tformControlName=\"email\"\n\t\t\tplaceholder=\"example@email.com\"\n\t\t\tclass=\"input-group\"\n\t\t/>\n\t</div>\n\t<div class=\"flex flex-col\">\n\t\t<label\n\t\t\tfor=\"password\"\n\t\t\tclass=\"label-form\"\n\t\t\t>Password</label\n\t\t>\n\t\t<div class=\"input-group\">\n\t\t\t<input\n\t\t\t\ttype=\"{{ input }}\"\n\t\t\t\tformControlName=\"password\"\n\t\t\t\tplaceholder=\"······\"\n\t\t\t\tstyle=\"font-size: large\"\n\t\t\t\tid=\"password\"\n\t\t\t/>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn btn-outline-secondary\"\n\t\t\t\t(click)=\"toggleShow()\"\n\t\t\t\tclass=\"btn-show\"\n\t\t\t>\n\t\t\t\t<!-- <span class=\"eye\"></span> -->\n\t\t\t</button>\n\t\t</div>\n\t</div>\n\t<div>\n\t\t<input\n\t\t\ttype=\"submit\"\n\t\t\tvalue=\"SIGN IN\"\n\t\t\t[disabled]=\"!loginForm.valid\"\n\t\t\tclass=\"submit-login\"\n\t\t/>\n\t</div>\n</form>\n"],"mappings":";AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;AAOnE,OAAM,MAAOC,mBAAmB;EALhCC,YAAA;IAMC,KAAAC,SAAS,GAAG,IAAIJ,SAAS,CAAC;MACzBK,KAAK,EAAE,IAAIN,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACK,QAAQ,CAAC;MAC/CC,QAAQ,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACK,QAAQ;KACjD,CAAC;IAEF,KAAAD,KAAK,GAAW,EAAE;IAElB,KAAAE,QAAQ,GAAW,EAAE;IAErB,KAAAC,KAAK,GAAG,UAAU;IAMlB,KAAAC,YAAY,GAAG,KAAK;;EAJpBC,MAAMA,CAAA;IACLC,KAAK,CAAC,IAAI,CAACP,SAAS,CAACQ,KAAK,CAACP,KAAK,GAAG,KAAK,GAAG,IAAI,CAACD,SAAS,CAACQ,KAAK,CAACL,QAAQ,CAAC;EAC1E;EAIAM,UAAUA,CAAA;IACT,IAAI,CAACJ,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;IACtC,IAAI,CAACD,KAAK,GAAG,IAAI,CAACC,YAAY,GAAG,MAAM,GAAG,UAAU;EACrD;;SArBYP,mBAAmB;;mBAAnBA,MAAmB;AAAA;;QAAnBA,MAAmB;EAAAY,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRhCE,EAAA,CAAAC,cAAA,cAGC;MADAD,EAAA,CAAAE,UAAA,sBAAAC,sDAAA;QAAA,OAAYJ,GAAA,CAAAX,MAAA,EAAQ;MAAA,EAAC;MAErBY,EAAA,CAAAC,cAAA,aAA2B;MAIxBD,EAAA,CAAAI,MAAA,YAAK;MAAAJ,EAAA,CAAAK,YAAA,EACN;MACDL,EAAA,CAAAM,SAAA,eAKE;MACHN,EAAA,CAAAK,YAAA,EAAM;MACNL,EAAA,CAAAC,cAAA,aAA2B;MAIxBD,EAAA,CAAAI,MAAA,eAAQ;MAAAJ,EAAA,CAAAK,YAAA,EACT;MACDL,EAAA,CAAAC,cAAA,aAAyB;MACxBD,EAAA,CAAAM,SAAA,eAME;MACFN,EAAA,CAAAC,cAAA,iBAKC;MAFAD,EAAA,CAAAE,UAAA,mBAAAK,sDAAA;QAAA,OAASR,GAAA,CAAAR,UAAA,EAAY;MAAA,EAAC;MAIvBS,EAAA,CAAAK,YAAA,EAAS;MAGXL,EAAA,CAAAC,cAAA,WAAK;MACJD,EAAA,CAAAM,SAAA,gBAKE;MACHN,EAAA,CAAAK,YAAA,EAAM;;;MA/CNL,EAAA,CAAAQ,UAAA,cAAAT,GAAA,CAAAjB,SAAA,CAAuB;MAwBpBkB,EAAA,CAAAS,SAAA,GAAkB;MAAlBT,EAAA,CAAAU,qBAAA,SAAAX,GAAA,CAAAb,KAAA,CAAkB;MAoBnBc,EAAA,CAAAS,SAAA,GAA6B;MAA7BT,EAAA,CAAAQ,UAAA,cAAAT,GAAA,CAAAjB,SAAA,CAAA6B,KAAA,CAA6B"},"metadata":{},"sourceType":"module","externalDependencies":[]}