{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { NOTES } from 'src/notes';\nexport let NotesListComponent = class NotesListComponent {\n  constructor(allMessages) {\n    this.allMessages = allMessages;\n    this.notes = NOTES;\n    this.search = '';\n    this.searchDate = '';\n  }\n  ngOnInit() {\n    this.allMessages.getAllMessages().subscribe(res => {\n      this.notes = res.data;\n    }, error => {\n      console.log(error);\n    });\n  }\n  // search notes, filter by title or body text (case insensitive) and show results\n  // searchNotesByTitle() {\n  // \tif (this.search) {\n  // \t\tthis.notes = this.notes.filter((note) => {\n  // \t\t\treturn (\n  // \t\t\t\tnote.title?.toLowerCase().includes(this.search.toLowerCase()) ||\n  // \t\t\t\tnote.body?.toLowerCase().includes(this.search.toLowerCase())\n  // \t\t\t);\n  // \t\t});\n  // \t} else {\n  // \t\tthis.ngOnInit();\n  // \t}\n  // }\n  searchNotes() {\n    if (this.search || this.searchDate) {\n      let searchDateString = '';\n      if (this.searchDate) {\n        const searchDate = new Date(this.searchDate); // assert this.searchDate as string\n        searchDateString = `${searchDate.getUTCFullYear()}-${('0' + (searchDate.getUTCMonth() + 1)).slice(-2)}-${('0' + searchDate.getUTCDate()).slice(-2)}`;\n      }\n      this.notes = this.notes.filter(note => {\n        const noteDate = new Date(note.updatedAt); // create a new Date object from updatedAt\n        // adjust the noteDate by the timezone offset\n        noteDate.setMinutes(noteDate.getMinutes() - noteDate.getTimezoneOffset());\n        const noteDateString = `${noteDate.getUTCFullYear()}-${('0' + (noteDate.getUTCMonth() + 1)).slice(-2)}-${('0' + noteDate.getUTCDate()).slice(-2)}`;\n        return (note.title?.toLowerCase().includes(this.search.toLowerCase()) || note.body?.toLowerCase().includes(this.search.toLowerCase())) && (!this.searchDate || noteDateString === searchDateString);\n      });\n    } else {\n      this.ngOnInit();\n    }\n  }\n  // search notes, filter by date and show results\n  searchNotesByDate() {\n    if (this.searchDate) {\n      const searchDate = new Date(this.searchDate); // assert this.searchDate as string\n      const searchDateString = `${searchDate.getUTCFullYear()}-${('0' + (searchDate.getUTCMonth() + 1)).slice(-2)}-${('0' + searchDate.getUTCDate()).slice(-2)}`;\n      this.notes = this.notes.filter(note => {\n        const noteDate = new Date(note.updatedAt); // create a new Date object from updatedAt\n        // adjust the noteDate by the timezone offset\n        noteDate.setMinutes(noteDate.getMinutes() - noteDate.getTimezoneOffset());\n        const noteDateString = `${noteDate.getUTCFullYear()}-${('0' + (noteDate.getUTCMonth() + 1)).slice(-2)}-${('0' + noteDate.getUTCDate()).slice(-2)}`;\n        return noteDateString === searchDateString;\n      });\n    } else {\n      this.ngOnInit();\n    }\n  }\n};\nNotesListComponent = __decorate([Component({\n  selector: 'app-notes-list',\n  templateUrl: './notes-list.component.html',\n  styleUrls: ['./notes-list.component.scss']\n})], NotesListComponent);","map":{"version":3,"names":["Component","NOTES","NotesListComponent","constructor","allMessages","notes","search","searchDate","ngOnInit","getAllMessages","subscribe","res","data","error","console","log","searchNotes","searchDateString","Date","getUTCFullYear","getUTCMonth","slice","getUTCDate","filter","note","noteDate","updatedAt","setMinutes","getMinutes","getTimezoneOffset","noteDateString","title","toLowerCase","includes","body","searchNotesByDate","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/santiago.valenzuela/Desktop/Easy Media/frontend/src/app/pages/notes-list/notes-list.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NOTES } from 'src/notes';\nimport { AllMessagesService } from '../../services/allMessages/all-messages.service';\n\n@Component({\n\tselector: 'app-notes-list',\n\ttemplateUrl: './notes-list.component.html',\n\tstyleUrls: ['./notes-list.component.scss'],\n})\nexport class NotesListComponent {\n\tconstructor(private allMessages: AllMessagesService) {}\n\n\tngOnInit(): void {\n\t\tthis.allMessages.getAllMessages().subscribe(\n\t\t\t(res: any) => {\n\t\t\t\tthis.notes = res.data;\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t);\n\t}\n\n\tnotes = NOTES;\n\tsearch = '';\n\tsearchDate = '';\n\n\n\t// search notes, filter by title or body text (case insensitive) and show results\n\t// searchNotesByTitle() {\n\t// \tif (this.search) {\n\t// \t\tthis.notes = this.notes.filter((note) => {\n\t// \t\t\treturn (\n\t// \t\t\t\tnote.title?.toLowerCase().includes(this.search.toLowerCase()) ||\n\t// \t\t\t\tnote.body?.toLowerCase().includes(this.search.toLowerCase())\n\t// \t\t\t);\n\t// \t\t});\n\t// \t} else {\n\t// \t\tthis.ngOnInit();\n\t// \t}\n\t// }\n\tsearchNotes() {\t\t\n\t\tif (this.search || this.searchDate) {\n\t\t\tlet searchDateString = '';\n\t\t\tif (this.searchDate) {\n\t\t\t\tconst searchDate = new Date(this.searchDate as string); // assert this.searchDate as string\n\t\t\t\tsearchDateString = `${searchDate.getUTCFullYear()}-${('0' + (searchDate.getUTCMonth() + 1)).slice(-2)}-${('0' + searchDate.getUTCDate()).slice(-2)}`;\n\t\t\t}\n\n\t\t\tthis.notes = this.notes.filter((note) => {\n\t\t\t\tconst noteDate = new Date(note.updatedAt as string); // create a new Date object from updatedAt\n\t\t\t\t// adjust the noteDate by the timezone offset\n\t\t\t\tnoteDate.setMinutes(noteDate.getMinutes() - noteDate.getTimezoneOffset());\n\t\t\t\tconst noteDateString = `${noteDate.getUTCFullYear()}-${('0' + (noteDate.getUTCMonth() + 1)).slice(-2)}-${('0' + noteDate.getUTCDate()).slice(-2)}`;\n\n\t\t\t\treturn (\n\t\t\t\t\t(note.title?.toLowerCase().includes(this.search.toLowerCase()) ||\n\t\t\t\t\tnote.body?.toLowerCase().includes(this.search.toLowerCase())) &&\n\t\t\t\t\t(!this.searchDate || noteDateString === searchDateString)\n\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.ngOnInit();\n\t\t}\n\t}\n\n\t// search notes, filter by date and show results\n\tsearchNotesByDate() {\n\t\tif (this.searchDate) {\n\t\t\tconst searchDate = new Date(this.searchDate as string); // assert this.searchDate as string\n\n\t\t\tconst searchDateString = `${searchDate.getUTCFullYear()}-${('0' + (searchDate.getUTCMonth() + 1)).slice(-2)}-${('0' + searchDate.getUTCDate()).slice(-2)}`;\n\n\t\t\tthis.notes = this.notes.filter((note) => {\n\t\t\t\tconst noteDate = new Date(note.updatedAt as string); // create a new Date object from updatedAt\n\n\t\t\t\t// adjust the noteDate by the timezone offset\n\t\t\t\tnoteDate.setMinutes(noteDate.getMinutes() - noteDate.getTimezoneOffset());\n\n\t\t\t\tconst noteDateString = `${noteDate.getUTCFullYear()}-${('0' + (noteDate.getUTCMonth() + 1)).slice(-2)}-${('0' + noteDate.getUTCDate()).slice(-2)}`;\n\n\t\t\t\treturn noteDateString === searchDateString;\n\t\t\t});\n\t\t} else {\n\t\t\tthis.ngOnInit();\n\t\t}\n\t}\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}