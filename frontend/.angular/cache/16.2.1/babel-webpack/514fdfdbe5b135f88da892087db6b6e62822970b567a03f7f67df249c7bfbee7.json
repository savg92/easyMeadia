{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nexport let SingUpFormComponent = class SingUpFormComponent {\n  constructor(registerService, loginService) {\n    this.registerService = registerService;\n    this.loginService = loginService;\n    // show/hide password\n    this.showPassword = false;\n    this.input = 'password';\n    this.input2 = 'password';\n    this.loginForm = new FormGroup({\n      fullName: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$')]),\n      password: new FormControl('', [Validators.required\n      // Validators.minLength(8),\n      // Validators.pattern(\n      // \t'^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$'\n      // ),\n      ]),\n\n      confirmPassword: new FormControl('', Validators.required)\n    }, {\n      validators: this.passwordMatchValidator\n    });\n    this.errorFullName = '';\n    this.errorEmail = '';\n    this.errorPassword = '';\n    this.errorConfirmPassword = '';\n    this.fullNameSubmitted = new EventEmitter();\n    this.emailSubmitted = new EventEmitter();\n    this.passwordSubmitted = new EventEmitter();\n  }\n  toggleShow() {\n    this.showPassword = !this.showPassword;\n    this.input = this.showPassword ? 'text' : 'password';\n  }\n  toggleShow2() {\n    this.showPassword = !this.showPassword;\n    this.input2 = this.showPassword ? 'text' : 'password';\n  }\n  // form validation\n  passwordMatchValidator(control) {\n    const g = control;\n    return g.get('password')?.value === g.get('confirmPassword')?.value ? null : {\n      mismatch: true\n    };\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      const email = this.loginForm.value.email;\n      this.emailSubmitted.emit(email);\n      const password = this.loginForm.value.password;\n      this.passwordSubmitted.emit(password);\n      console.log(this.loginForm.value);\n      this.registerService.register(this.loginForm.value).subscribe(res => {\n        //* TODO: redirect to login page\n        //* TODO: show success message\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    } else {\n      const nameControl = this.loginForm.get('fullName');\n      const emailControl = this.loginForm.get('email');\n      const passwordControl = this.loginForm.get('password');\n      const confirmPasswordControl = this.loginForm.get('confirmPassword');\n      if (nameControl && !nameControl.valid) {\n        this.errorFullName = 'Please provide a valid name';\n      }\n      if (emailControl && !emailControl.valid) {\n        this.errorEmail = 'Please provide a valid email';\n      }\n      if (passwordControl && !passwordControl.valid) {\n        this.errorPassword = 'Please provide a password';\n      }\n      if (confirmPasswordControl && !confirmPasswordControl.valid) {\n        this.errorConfirmPassword = 'Please confirm your password';\n      }\n    }\n  }\n};\n__decorate([Output()], SingUpFormComponent.prototype, \"fullNameSubmitted\", void 0);\n__decorate([Output()], SingUpFormComponent.prototype, \"emailSubmitted\", void 0);\n__decorate([Output()], SingUpFormComponent.prototype, \"passwordSubmitted\", void 0);\nSingUpFormComponent = __decorate([Component({\n  selector: 'app-sing-up-form',\n  templateUrl: './sing-up-form.component.html',\n  styleUrls: ['./sing-up-form.component.scss']\n})], SingUpFormComponent);","map":{"version":3,"names":["Component","EventEmitter","Output","FormGroup","FormControl","Validators","SingUpFormComponent","constructor","registerService","loginService","showPassword","input","input2","loginForm","fullName","required","email","pattern","password","confirmPassword","validators","passwordMatchValidator","errorFullName","errorEmail","errorPassword","errorConfirmPassword","fullNameSubmitted","emailSubmitted","passwordSubmitted","toggleShow","toggleShow2","control","g","get","value","mismatch","onSubmit","valid","emit","console","log","register","subscribe","res","error","nameControl","emailControl","passwordControl","confirmPasswordControl","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/santiago.valenzuela/Desktop/Easy Media/frontend/src/app/components/sing-up-form/sing-up-form.component.ts"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport {\n\tAbstractControl,\n\tFormGroup,\n\tFormControl,\n\tValidators,\n} from '@angular/forms';\nimport { RegisterService } from '../../services/register/register.service';\n@Component({\n\tselector: 'app-sing-up-form',\n\ttemplateUrl: './sing-up-form.component.html',\n\tstyleUrls: ['./sing-up-form.component.scss'],\n})\nexport class SingUpFormComponent {\n\tconstructor(private registerService: RegisterService, private loginService: Lo) {}\n\n\t// show/hide password\n\tshowPassword = false;\n\tinput = 'password';\n\tinput2 = 'password';\n\n\ttoggleShow() {\n\t\tthis.showPassword = !this.showPassword;\n\t\tthis.input = this.showPassword ? 'text' : 'password';\n\t}\n\n\ttoggleShow2() {\n\t\tthis.showPassword = !this.showPassword;\n\t\tthis.input2 = this.showPassword ? 'text' : 'password';\n\t}\n\n\t// form validation\n\tpasswordMatchValidator(control: AbstractControl) {\n\t\tconst g = control as FormGroup;\n\t\treturn g.get('password')?.value === g.get('confirmPassword')?.value\n\t\t\t? null\n\t\t\t: { mismatch: true };\n\t}\n\n\tloginForm = new FormGroup(\n\t\t{\n\t\t\tfullName: new FormControl('', Validators.required),\n\t\t\temail: new FormControl('', [\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$'),\n\t\t\t]),\n\t\t\tpassword: new FormControl('', [\n\t\t\t\tValidators.required,\n\t\t\t\t// Validators.minLength(8),\n\t\t\t\t// Validators.pattern(\n\t\t\t\t// \t'^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$'\n\t\t\t\t// ),\n\t\t\t]),\n\t\t\tconfirmPassword: new FormControl('', Validators.required),\n\t\t},\n\t\t{ validators: this.passwordMatchValidator }\n\t);\n\n\terrorFullName = '';\n\terrorEmail = '';\n\terrorPassword = '';\n\terrorConfirmPassword = '';\n\n\t@Output() fullNameSubmitted = new EventEmitter();\n\t@Output() emailSubmitted = new EventEmitter();\n\t@Output() passwordSubmitted = new EventEmitter();\n\n\tonSubmit() {\n\t\tif (this.loginForm.valid) {\n\t\t\tconst email = this.loginForm.value.email;\n\t\t\tthis.emailSubmitted.emit(email);\n\n\t\t\tconst password = this.loginForm.value.password;\n\t\t\tthis.passwordSubmitted.emit(password);\n\n\t\t\tconsole.log(this.loginForm.value);\n\n\t\t\tthis.registerService.register(this.loginForm.value).subscribe(\n\t\t\t\t(res) => {\n\n\t\t\t\t\t//* TODO: redirect to login page\n\t\t\t\t\t//* TODO: show success message\n\t\t\t\t\tconsole.log(res);\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\tconst nameControl = this.loginForm.get('fullName');\n\t\t\tconst emailControl = this.loginForm.get('email');\n\t\t\tconst passwordControl = this.loginForm.get('password');\n\t\t\tconst confirmPasswordControl = this.loginForm.get('confirmPassword');\n\n\t\t\tif (nameControl && !nameControl.valid) {\n\t\t\t\tthis.errorFullName = 'Please provide a valid name';\n\t\t\t}\n\n\t\t\tif (emailControl && !emailControl.valid) {\n\t\t\t\tthis.errorEmail = 'Please provide a valid email';\n\t\t\t}\n\n\t\t\tif (passwordControl && !passwordControl.valid) {\n\t\t\t\tthis.errorPassword = 'Please provide a password';\n\t\t\t}\n\n\t\t\tif (confirmPasswordControl && !confirmPasswordControl.valid) {\n\t\t\t\tthis.errorConfirmPassword = 'Please confirm your password';\n\t\t\t}\n\t\t}\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}