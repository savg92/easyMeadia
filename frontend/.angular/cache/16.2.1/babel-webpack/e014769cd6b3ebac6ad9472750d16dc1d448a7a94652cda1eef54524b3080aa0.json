{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nexport let SignInFormComponent = class SignInFormComponent {\n  constructor() {\n    // show/hide password\n    this.showPassword = false;\n    this.input = 'password';\n    // form validation\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$')]),\n      password: new FormControl('', Validators.required)\n    });\n    this.email = '';\n    this.password = '';\n    // login2() {\n    // \talert(this.loginForm.value.email + ' | ' + this.loginForm.value.password);\n    // }\n    this.emailSubmitted = new EventEmitter();\n    this.passwordSubmitted = new EventEmitter();\n    this.errorEmail = '';\n  }\n  toggleShow() {\n    this.showPassword = !this.showPassword;\n    this.input = this.showPassword ? 'text' : 'password';\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      const email = this.loginForm.value.email;\n      this.emailSubmitted.emit(email);\n      const password = this.loginForm.value.password;\n      this.passwordSubmitted.emit(password);\n      console.log(this.loginForm.value);\n    } else {\n      const emailControl = this.loginForm.get('email');\n      if (emailControl && !emailControl.valid) {\n        this.errorEmail = 'Please provide a valid email';\n      }\n    }\n  }\n};\n__decorate([Output()], SignInFormComponent.prototype, \"emailSubmitted\", void 0);\n__decorate([Output()], SignInFormComponent.prototype, \"passwordSubmitted\", void 0);\nSignInFormComponent = __decorate([Component({\n  selector: 'app-sign-in-form',\n  templateUrl: './sign-in-form.component.html',\n  styleUrls: ['./sign-in-form.component.scss']\n})], SignInFormComponent);","map":{"version":3,"names":["Component","EventEmitter","Output","FormControl","FormGroup","Validators","SignInFormComponent","constructor","showPassword","input","loginForm","email","required","pattern","password","emailSubmitted","passwordSubmitted","errorEmail","toggleShow","onSubmit","valid","value","emit","console","log","emailControl","get","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/santiago.valenzuela/Desktop/Easy Media/frontend/src/app/sign-in-form/sign-in-form.component.ts"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n\tselector: 'app-sign-in-form',\n\ttemplateUrl: './sign-in-form.component.html',\n\tstyleUrls: ['./sign-in-form.component.scss'],\n})\nexport class SignInFormComponent {\n\t// show/hide password\n\tshowPassword = false;\n\tinput = 'password';\n\ttoggleShow() {\n\t\tthis.showPassword = !this.showPassword;\n\t\tthis.input = this.showPassword ? 'text' : 'password';\n\t}\n\n\t// form validation\n\n\tloginForm = new FormGroup({\n\t\temail: new FormControl('', [Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$')]),\n\t\tpassword: new FormControl('', Validators.required),\n\t});\n\n\temail: string = '';\n\tpassword: string = '';\n\n\t\n\n\t// login2() {\n\t// \talert(this.loginForm.value.email + ' | ' + this.loginForm.value.password);\n\t// }\n\n\t@Output() emailSubmitted = new EventEmitter();\n\t@Output() passwordSubmitted = new EventEmitter();\n\n\terrorEmail = '';\n\n\tonSubmit() {\n\t\tif (this.loginForm.valid) {\n\t\t\tconst email = this.loginForm.value.email;\n\t\t\tthis.emailSubmitted.emit(email);\n\n\t\t\tconst password = this.loginForm.value.password;\n\t\t\tthis.passwordSubmitted.emit(password);\n\n\t\t\tconsole.log(this.loginForm.value);\n\t\t} else {\n\t\t\tconst emailControl = this.loginForm.get('email');\n\t\t\tif (emailControl && !emailControl.valid) {\n\t\t\t\tthis.errorEmail = 'Please provide a valid email';\n\t\t\t}\n\t\t}\n\t}\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAC/D,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAO5D,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAAzBC,YAAA;IACN;IACA,KAAAC,YAAY,GAAG,KAAK;IACpB,KAAAC,KAAK,GAAG,UAAU;IAMlB;IAEA,KAAAC,SAAS,GAAG,IAAIN,SAAS,CAAC;MACzBO,KAAK,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACQ,OAAO,CAAC,0CAA0C,CAAC,CAAC,CAAC;MACjHC,QAAQ,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACO,QAAQ;KACjD,CAAC;IAEF,KAAAD,KAAK,GAAW,EAAE;IAClB,KAAAG,QAAQ,GAAW,EAAE;IAIrB;IACA;IACA;IAEU,KAAAC,cAAc,GAAG,IAAId,YAAY,EAAE;IACnC,KAAAe,iBAAiB,GAAG,IAAIf,YAAY,EAAE;IAEhD,KAAAgB,UAAU,GAAG,EAAE;EAkBhB;EA1CCC,UAAUA,CAAA;IACT,IAAI,CAACV,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;IACtC,IAAI,CAACC,KAAK,GAAG,IAAI,CAACD,YAAY,GAAG,MAAM,GAAG,UAAU;EACrD;EAuBAW,QAAQA,CAAA;IACP,IAAI,IAAI,CAACT,SAAS,CAACU,KAAK,EAAE;MACzB,MAAMT,KAAK,GAAG,IAAI,CAACD,SAAS,CAACW,KAAK,CAACV,KAAK;MACxC,IAAI,CAACI,cAAc,CAACO,IAAI,CAACX,KAAK,CAAC;MAE/B,MAAMG,QAAQ,GAAG,IAAI,CAACJ,SAAS,CAACW,KAAK,CAACP,QAAQ;MAC9C,IAAI,CAACE,iBAAiB,CAACM,IAAI,CAACR,QAAQ,CAAC;MAErCS,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,SAAS,CAACW,KAAK,CAAC;KACjC,MAAM;MACN,MAAMI,YAAY,GAAG,IAAI,CAACf,SAAS,CAACgB,GAAG,CAAC,OAAO,CAAC;MAChD,IAAID,YAAY,IAAI,CAACA,YAAY,CAACL,KAAK,EAAE;QACxC,IAAI,CAACH,UAAU,GAAG,8BAA8B;;;EAGnD;CACA;AArBUU,UAAA,EAATzB,MAAM,EAAE,C,0DAAqC;AACpCyB,UAAA,EAATzB,MAAM,EAAE,C,6DAAwC;AA1BrCI,mBAAmB,GAAAqB,UAAA,EAL/B3B,SAAS,CAAC;EACV4B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,+BAA+B;CAC3C,CAAC,C,EACWxB,mBAAmB,CA8C/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}