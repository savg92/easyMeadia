{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { NOTES } from 'src/notes';\nexport let NotesListComponent = class NotesListComponent {\n  constructor(allMessages) {\n    this.allMessages = allMessages;\n    this.notes = NOTES;\n    this.search = '';\n    this.searchDate = '';\n  }\n  ngOnInit() {\n    this.allMessages.getAllMessages().subscribe(res => {\n      this.notes = res.data;\n      console.log(this.notes);\n    }, error => {\n      console.log(error);\n    });\n  }\n  // search notes, filter by title or body text (case insensitive) and show results\n  searchNotes() {\n    if (this.search) {\n      this.notes = this.notes.filter(note => {\n        return note.title?.toLowerCase().includes(this.search.toLowerCase()) || note.body?.toLowerCase().includes(this.search.toLowerCase());\n      });\n    } else {\n      this.ngOnInit();\n    }\n  }\n  // search notes, filter by date and show results\n  searchNotesByDate() {\n    console.log(this.searchDate);\n    if (this.searchDate) {\n      const searchDate = new Date(this.searchDate); // assert this.searchDate as string\n      const searchDateString = `${searchDate.getUTCFullYear()}-${('0' + (searchDate.getUTCMonth() + 1)).slice(-2)}-${('0' + searchDate.getUTCDate()).slice(-2)}`;\n      this.notes = this.notes.filter(note => {\n        const noteDate = new Date(note.updatedAt); // create a new Date object from updatedAt\n        // adjust the noteDate by the timezone offset\n        noteDate.setMinutes(noteDate.getMinutes() - noteDate.getTimezoneOffset());\n        const noteDateString = `${noteDate.getUTCFullYear()}-${('0' + (noteDate.getUTCMonth() + 1)).slice(-2)}-${('0' + noteDate.getUTCDate()).slice(-2)}`;\n        return noteDateString === searchDateString;\n      });\n    } else {\n      this.ngOnInit();\n    }\n  }\n};\nNotesListComponent = __decorate([Component({\n  selector: 'app-notes-list',\n  templateUrl: './notes-list.component.html',\n  styleUrls: ['./notes-list.component.scss']\n})], NotesListComponent);","map":{"version":3,"names":["Component","NOTES","NotesListComponent","constructor","allMessages","notes","search","searchDate","ngOnInit","getAllMessages","subscribe","res","data","console","log","error","searchNotes","filter","note","title","toLowerCase","includes","body","searchNotesByDate","Date","searchDateString","getUTCFullYear","getUTCMonth","slice","getUTCDate","noteDate","updatedAt","setMinutes","getMinutes","getTimezoneOffset","noteDateString","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/santiago.valenzuela/Desktop/Easy Media/frontend/src/app/pages/notes-list/notes-list.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NOTES } from 'src/notes';\nimport { AllMessagesService } from '../../services/allMessages/all-messages.service';\n\n@Component({\n\tselector: 'app-notes-list',\n\ttemplateUrl: './notes-list.component.html',\n\tstyleUrls: ['./notes-list.component.scss'],\n})\nexport class NotesListComponent {\n\tconstructor(private allMessages: AllMessagesService) {}\n\n\tngOnInit(): void {\n\t\tthis.allMessages.getAllMessages().subscribe(\n\t\t\t(res: any) => {\n\t\t\t\tthis.notes = res.data;\n\t\t\t\tconsole.log(this.notes);\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t);\n\t}\n\n\tnotes = NOTES;\n\tsearch = '';\n\tsearchDate = '';\n\n\n\t// search notes, filter by title or body text (case insensitive) and show results\n\tsearchNotes() {\n\t\tif (this.search) {\n\t\t\tthis.notes = this.notes.filter((note) => {\n\t\t\t\treturn (\n\t\t\t\t\tnote.title?.toLowerCase().includes(this.search.toLowerCase()) ||\n\t\t\t\t\tnote.body?.toLowerCase().includes(this.search.toLowerCase())\n\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.ngOnInit();\n\t\t}\n\t}\n\n\t// search notes, filter by date and show results\n\tsearchNotesByDate() {\n\t\tconsole.log(this.searchDate);\n\t\tif (this.searchDate) {\n\t\t\tconst searchDate = new Date(this.searchDate as string); // assert this.searchDate as string\n\n\t\t\tconst searchDateString = `${searchDate.getUTCFullYear()}-${('0' + (searchDate.getUTCMonth() + 1)).slice(-2)}-${('0' + searchDate.getUTCDate()).slice(-2)}`;\n\n\t\t\tthis.notes = this.notes.filter((note) => {\n\t\t\t\tconst noteDate = new Date(note.updatedAt as string); // create a new Date object from updatedAt\n\n\t\t\t\t// adjust the noteDate by the timezone offset\n\t\t\t\tnoteDate.setMinutes(noteDate.getMinutes() - noteDate.getTimezoneOffset());\n\n\t\t\t\tconst noteDateString = `${noteDate.getUTCFullYear()}-${('0' + (noteDate.getUTCMonth() + 1)).slice(-2)}-${('0' + noteDate.getUTCDate()).slice(-2)}`;\n\n\t\t\t\treturn noteDateString === searchDateString;\n\t\t\t});\n\t\t} else {\n\t\t\tthis.ngOnInit();\n\t\t}\n\t}\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,KAAK,QAAQ,WAAW;AAQ1B,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAC9BC,YAAoBC,WAA+B;IAA/B,KAAAA,WAAW,GAAXA,WAAW;IAc/B,KAAAC,KAAK,GAAGJ,KAAK;IACb,KAAAK,MAAM,GAAG,EAAE;IACX,KAAAC,UAAU,GAAG,EAAE;EAhBuC;EAEtDC,QAAQA,CAAA;IACP,IAAI,CAACJ,WAAW,CAACK,cAAc,EAAE,CAACC,SAAS,CACzCC,GAAQ,IAAI;MACZ,IAAI,CAACN,KAAK,GAAGM,GAAG,CAACC,IAAI;MACrBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,KAAK,CAAC;IACxB,CAAC,EACAU,KAAK,IAAI;MACTF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACnB,CAAC,CACD;EACF;EAOA;EACAC,WAAWA,CAAA;IACV,IAAI,IAAI,CAACV,MAAM,EAAE;MAChB,IAAI,CAACD,KAAK,GAAG,IAAI,CAACA,KAAK,CAACY,MAAM,CAAEC,IAAI,IAAI;QACvC,OACCA,IAAI,CAACC,KAAK,EAAEC,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACf,MAAM,CAACc,WAAW,EAAE,CAAC,IAC7DF,IAAI,CAACI,IAAI,EAAEF,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACf,MAAM,CAACc,WAAW,EAAE,CAAC;MAE9D,CAAC,CAAC;KACF,MAAM;MACN,IAAI,CAACZ,QAAQ,EAAE;;EAEjB;EAEA;EACAe,iBAAiBA,CAAA;IAChBV,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,UAAU,CAAC;IAC5B,IAAI,IAAI,CAACA,UAAU,EAAE;MACpB,MAAMA,UAAU,GAAG,IAAIiB,IAAI,CAAC,IAAI,CAACjB,UAAoB,CAAC,CAAC,CAAC;MAExD,MAAMkB,gBAAgB,GAAG,GAAGlB,UAAU,CAACmB,cAAc,EAAE,IAAI,CAAC,GAAG,IAAInB,UAAU,CAACoB,WAAW,EAAE,GAAG,CAAC,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAGrB,UAAU,CAACsB,UAAU,EAAE,EAAED,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;MAE1J,IAAI,CAACvB,KAAK,GAAG,IAAI,CAACA,KAAK,CAACY,MAAM,CAAEC,IAAI,IAAI;QACvC,MAAMY,QAAQ,GAAG,IAAIN,IAAI,CAACN,IAAI,CAACa,SAAmB,CAAC,CAAC,CAAC;QAErD;QACAD,QAAQ,CAACE,UAAU,CAACF,QAAQ,CAACG,UAAU,EAAE,GAAGH,QAAQ,CAACI,iBAAiB,EAAE,CAAC;QAEzE,MAAMC,cAAc,GAAG,GAAGL,QAAQ,CAACJ,cAAc,EAAE,IAAI,CAAC,GAAG,IAAII,QAAQ,CAACH,WAAW,EAAE,GAAG,CAAC,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAGE,QAAQ,CAACD,UAAU,EAAE,EAAED,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;QAElJ,OAAOO,cAAc,KAAKV,gBAAgB;MAC3C,CAAC,CAAC;KACF,MAAM;MACN,IAAI,CAACjB,QAAQ,EAAE;;EAEjB;CACA;AAxDYN,kBAAkB,GAAAkC,UAAA,EAL9BpC,SAAS,CAAC;EACVqC,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,6BAA6B;CACzC,CAAC,C,EACWrC,kBAAkB,CAwD9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}