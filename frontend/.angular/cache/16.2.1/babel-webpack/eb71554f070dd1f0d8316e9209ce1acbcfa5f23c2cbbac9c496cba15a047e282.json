{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, inject } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NOTES } from '../../notes';\nimport { Router } from '@angular/router';\nexport let AddNoteComponent = class AddNoteComponent {\n  constructor() {\n    this.noteTitle = 'Your post title';\n    this.noteText = 'Create message for share with your friends.';\n    // time and short date\n    this.date = new Date();\n    this.formattedDate = this.date.toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true\n    }) + ' ' + this.date.toLocaleDateString('en-US', {\n      year: '2-digit',\n      month: '2-digit',\n      day: '2-digit'\n    }).replace(/\\//g, '-');\n    this.user = 'User';\n    this.addNoteForm = new FormGroup({\n      title: new FormControl('', Validators.required),\n      text: new FormControl('')\n    });\n    this.router = inject(Router);\n  }\n  onSubmit() {\n    alert(this.addNoteForm.value.title + ' | ' + this.addNoteForm.value.text);\n  }\n  addNote() {\n    let title = this.addNoteForm.value.title ?? '';\n    let text = this.addNoteForm.value.text ?? '';\n    if (this.addNoteForm.valid) {\n      let ids = NOTES.map(a => a.id);\n      let maxId = 0;\n      if (ids.length > 0) {\n        maxId = Math.max(...ids);\n      }\n      let newNote = {\n        id: maxId + 1,\n        title: title,\n        text: text\n      };\n      NOTES.unshift(newNote);\n      this.addNoteForm.reset();\n      this.router.navigateByUrl('/notes-list');\n    }\n  }\n};\nAddNoteComponent = __decorate([Component({\n  selector: 'app-add-note',\n  templateUrl: './add-note.component.html',\n  styleUrls: ['./add-note.component.scss']\n})], AddNoteComponent);","map":{"version":3,"names":["Component","inject","FormControl","FormGroup","Validators","NOTES","Router","AddNoteComponent","constructor","noteTitle","noteText","date","Date","formattedDate","toLocaleTimeString","hour","minute","hour12","toLocaleDateString","year","month","day","replace","user","addNoteForm","title","required","text","router","onSubmit","alert","value","addNote","valid","ids","map","a","id","maxId","length","Math","max","newNote","unshift","reset","navigateByUrl","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/santiago.valenzuela/Desktop/Easy Media/frontend/src/app/add-note/add-note.component.ts"],"sourcesContent":["import { Component, inject } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NOTES } from '../../notes';\nimport { Router } from '@angular/router';\n\n@Component({\n\tselector: 'app-add-note',\n\ttemplateUrl: './add-note.component.html',\n\tstyleUrls: ['./add-note.component.scss'],\n})\nexport class AddNoteComponent {\n\tnoteTitle = 'Your post title';\n\tnoteText = 'Create message for share with your friends.';\n  // time and short date\n  date = new Date();\n  formattedDate = this.date.toLocaleTimeString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true }) + ' ' + this.date.toLocaleDateString('en-US', { year: '2-digit', month: '2-digit', day: '2-digit' }).replace(/\\//g, '-');\n  \n  user = 'User';\n\n\taddNoteForm = new FormGroup({\n\t\ttitle: new FormControl('', Validators.required),\n\t\ttext: new FormControl(''),\n\t});\n\n\tonSubmit() {\n\t\talert(this.addNoteForm.value.title + ' | ' + this.addNoteForm.value.text);\n\t}\n\n\trouter = inject(Router);\n\taddNote() {\n\t\tlet title = this.addNoteForm.value.title ?? '';\n\t\tlet text = this.addNoteForm.value.text ?? '';\n\n\t\tif (this.addNoteForm.valid) {\n\t\t\tlet ids = NOTES.map((a) => a.id);\n\t\t\tlet maxId = 0;\n\t\t\tif (ids.length > 0) {\n\t\t\t\tmaxId = Math.max(...ids);\n\t\t\t}\n\t\t\tlet newNote = {\n\t\t\t\tid: maxId + 1,\n\t\t\t\ttitle: title,\n\t\t\t\ttext: text,\n\t\t\t};\n\t\t\tNOTES.unshift(newNote);\n\t\t\tthis.addNoteForm.reset();\n\t\t\tthis.router.navigateByUrl('/notes-list');\n\t\t}\n\t}\n\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,eAAe;AACjD,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,MAAM,QAAQ,iBAAiB;AAOjC,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAAtBC,YAAA;IACN,KAAAC,SAAS,GAAG,iBAAiB;IAC7B,KAAAC,QAAQ,GAAG,6CAA6C;IACvD;IACA,KAAAC,IAAI,GAAG,IAAIC,IAAI,EAAE;IACjB,KAAAC,aAAa,GAAG,IAAI,CAACF,IAAI,CAACG,kBAAkB,CAAC,OAAO,EAAE;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAI,CAAE,CAAC,GAAG,GAAG,GAAG,IAAI,CAACN,IAAI,CAACO,kBAAkB,CAAC,OAAO,EAAE;MAAEC,IAAI,EAAE,SAAS;MAAEC,KAAK,EAAE,SAAS;MAAEC,GAAG,EAAE;IAAS,CAAE,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;IAEpO,KAAAC,IAAI,GAAG,MAAM;IAEd,KAAAC,WAAW,GAAG,IAAIrB,SAAS,CAAC;MAC3BsB,KAAK,EAAE,IAAIvB,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACsB,QAAQ,CAAC;MAC/CC,IAAI,EAAE,IAAIzB,WAAW,CAAC,EAAE;KACxB,CAAC;IAMF,KAAA0B,MAAM,GAAG3B,MAAM,CAACK,MAAM,CAAC;EAsBxB;EA1BCuB,QAAQA,CAAA;IACPC,KAAK,CAAC,IAAI,CAACN,WAAW,CAACO,KAAK,CAACN,KAAK,GAAG,KAAK,GAAG,IAAI,CAACD,WAAW,CAACO,KAAK,CAACJ,IAAI,CAAC;EAC1E;EAGAK,OAAOA,CAAA;IACN,IAAIP,KAAK,GAAG,IAAI,CAACD,WAAW,CAACO,KAAK,CAACN,KAAK,IAAI,EAAE;IAC9C,IAAIE,IAAI,GAAG,IAAI,CAACH,WAAW,CAACO,KAAK,CAACJ,IAAI,IAAI,EAAE;IAE5C,IAAI,IAAI,CAACH,WAAW,CAACS,KAAK,EAAE;MAC3B,IAAIC,GAAG,GAAG7B,KAAK,CAAC8B,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,CAAC;MAChC,IAAIC,KAAK,GAAG,CAAC;MACb,IAAIJ,GAAG,CAACK,MAAM,GAAG,CAAC,EAAE;QACnBD,KAAK,GAAGE,IAAI,CAACC,GAAG,CAAC,GAAGP,GAAG,CAAC;;MAEzB,IAAIQ,OAAO,GAAG;QACbL,EAAE,EAAEC,KAAK,GAAG,CAAC;QACbb,KAAK,EAAEA,KAAK;QACZE,IAAI,EAAEA;OACN;MACDtB,KAAK,CAACsC,OAAO,CAACD,OAAO,CAAC;MACtB,IAAI,CAAClB,WAAW,CAACoB,KAAK,EAAE;MACxB,IAAI,CAAChB,MAAM,CAACiB,aAAa,CAAC,aAAa,CAAC;;EAE1C;CAEA;AAxCYtC,gBAAgB,GAAAuC,UAAA,EAL5B9C,SAAS,CAAC;EACV+C,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,2BAA2B;CACvC,CAAC,C,EACW1C,gBAAgB,CAwC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}